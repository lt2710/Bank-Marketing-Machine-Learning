#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
cache.lazy = FALSE
)
options(htmltools.dir.version = FALSE)
my_locale <- Sys.getlocale("LC_ALL")
Sys.setlocale("LC_ALL", my_locale)
library(Statamarkdown)
statapath <- find_stata()
opts_chunk$set(
engine = "stata",
engine.path = statapath,
comment = "#",
collectcode = TRUE,
cleanlog=FALSE,
savedo=TRUE
)
# Load packages.
packages <- c("tidyverse",
"knitr",
"ggplot2",
"gridExtra",
"readstata13",
)
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
cache.lazy = FALSE
)
options(htmltools.dir.version = FALSE)
my_locale <- Sys.getlocale("LC_ALL")
Sys.setlocale("LC_ALL", my_locale)
library(Statamarkdown)
statapath <- find_stata()
opts_chunk$set(
engine = "stata",
engine.path = statapath,
comment = "#",
collectcode = TRUE,
cleanlog=FALSE,
savedo=FALSE
)
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
cache.lazy = FALSE
)
options(htmltools.dir.version = FALSE)
my_locale <- Sys.getlocale("LC_ALL")
Sys.setlocale("LC_ALL", my_locale)
library(Statamarkdown)
statapath <- find_stata()
opts_chunk$set(
engine = "stata",
engine.path = statapath,
comment = "#",
collectcode = TRUE,
cleanlog=TRUE,
savedo=FALSE
)
# Load packages.
packages <- c("tidyverse",
"knitr",
"ggplot2",
"gridExtra",
"readstata13"
)
packages <- lapply(packages, FUN = function(x) {
if(!require(x, character.only = TRUE)) {
install.packages(x)
library(x, character.only = TRUE)
}
}
)
find_stata()
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
cache.lazy = FALSE
)
options(htmltools.dir.version = FALSE)
my_locale <- Sys.getlocale("LC_ALL")
Sys.setlocale("LC_ALL", my_locale)
library(Statamarkdown)
statapath <- find_stata()
opts_chunk$set(
engine = "stata",
engine.path = statapath,
comment = "#",
collectcode = TRUE,
cleanlog=TRUE,
savedo=FALSE
)
# Load packages.
packages <- c("tidyverse",
"knitr",
"ggplot2",
"gridExtra",
"readstata13"
)
packages <- lapply(packages, FUN = function(x) {
if(!require(x, character.only = TRUE)) {
install.packages(x)
library(x, character.only = TRUE)
}
}
)
install.packages("Statamarkdown")
install.packages("Statamarkdown")
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
remove.packages("Statamarkdown", lib="~/R/win-library/3.6")
install.packages("Rtools")
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
detach("package:readstata13", unload = TRUE)
detach("package:knitr", unload = TRUE)
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
library(stringi)
remove.packages("stringi", lib="~/R/win-library/3.6")
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
install.packages("stringi")
install.packages("stringi")
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
cache.lazy = FALSE
)
options(htmltools.dir.version = FALSE)
my_locale <- Sys.getlocale("LC_ALL")
Sys.setlocale("LC_ALL", my_locale)
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
cache.lazy = FALSE
)
options(htmltools.dir.version = FALSE)
my_locale <- Sys.getlocale("LC_ALL")
Sys.setlocale("LC_ALL", my_locale)
library(Statamarkdown)
statapath <- find_stata()
opts_chunk$set(
engine = "stata",
engine.path = statapath,
comment = "#",
collectcode = TRUE,
cleanlog=TRUE,
savedo=FALSE
)
#cd "C:\Users\Tianl\Documents\GitHub\elder-consumption"
library(Statamarkdown)
library(Statamarkdown)
use "cfps2014famecon_20161230.dta", clear
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = FALSE,
eval = TRUE,
message = FALSE,
warning = FALSE,
fig.height = 6,
fig.width = 16,
fig.align = "center",
cache = TRUE,
cache.lazy = FALSE
)
options(htmltools.dir.version = FALSE)
?read.dta13
#Import data and labels on household economic activiy
cfps<-read.dta13("cfps2014famecon_20161230.dta")
cfps<-readstata13::read.dta13("data\ecfps2016famecon_201807.dta")
cfps<-readstata13::read.dta13("data\ecfps2016famecon_201807.dta")
cfps<-readstata13::read.dta13("data/ecfps2016famecon_201807.dta")
cfps<-readstata13::read.dta13("data/ecfps2016famecon_201807.dta")%>%filter(urban16==1)
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = FALSE,
eval = TRUE,
message = FALSE,
warning = FALSE,
fig.height = 6,
fig.width = 16,
fig.align = "center",
cache = TRUE,
cache.lazy = FALSE
)
#knitr::opts_knit$set(root.dir = "C:/Users/Tianl/Documents/GitHub/Bank-Marketing-Machine-Learning/Census")
options(htmltools.dir.version = FALSE)
#set up theme map
theme_simplemap <- function(base_size = 9,
base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
panel.spacing = unit(0, "lines"),
plot.background = element_blank(),
legend.position = "none"
)
}
packages <- c(
"tidyverse",
"knitr",
"ggplot2",
"gridExtra",
"FactoMineR",
"factoextra",
"RColorBrewer",
"countrycode",
"qwraps2",
"sjstats",
"finalfit",
"fpc",
"tidymodels",
"parsnip"
)
packages <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x)
library(x, character.only = TRUE)
}
}
)
select<-dplyr::select
#import raw data
train <- read.csv("adult.data.csv",
header = FALSE,
stringsAsFactors = FALSE)
test <- read.csv(
"adult.test.csv",
header = FALSE,
skip = 1,
stringsAsFactors = FALSE
)
#combine train and test together
dta <- rbind(cbind(set = rep("train", nrow(train)),
train),
cbind(set = rep("test", nrow(test)),
test))
#assign variable names
names(dta)[-1] <- c(
"age",
"workingclass",
"fnlwgt",
"education",
"education.num",
"martial.status",
"occupation",
"relationship",
"race",
"sex",
"capital.gain",
"capital.loss",
"hours.per.week",
"native.country",
"income"
)
str(dta)
#the weighting should have nothing to do with prediction
dta <- dta %>% select(-fnlwgt)
#trim the white space
dta <- dta %>% mutate_if(is.character, str_trim)
#recode ? and unknown to NA
dta <- na_if(dta, "?")
#print a summary
options(qwraps2_markup = "markdown")
summary_table(dta)
dta$native.country[!dta$native.country %in% c("United-States")] <-
countrycode(dta$native.country[!dta$native.country %in% c("United-States")],
"country.name",
"continent",
nomatch = "Not matched")
dta <-
dta %>% mutate(profit = capital.gain - capital.loss) %>% select(-capital.gain,-capital.loss)
#recode income
dta$income[dta$income == "<=50K."] <- "<=50K"
dta$income[dta$income == ">50K."] <- ">50K"
dta$income[dta$income == "<=50K"] <- "Income <= 50K"
dta$income[dta$income == ">50K"] <- "Income > 50K"
for (i in names(dta %>% select(-income))) {
if (class(dta[[i]]) == "character") {
i %>% print()
cramer(as.formula(paste("income~", i, sep = "")), dta) %>% print()
table(dta[[i]], dta$income) %>% print()
}
}
#recode workingclass
dta$workingclass[dta$workingclass %in% c("Federal-gov", "Local-gov", "State-gov")] <-
"Government"
dta$workingclass[dta$workingclass %in% c("Self-emp-inc", "Self-emp-not-inc")] <-
"Self-employed"
dta$workingclass[dta$workingclass %in% c("Never-worked", "Without-pay")] <-
"No work/pay"
#recode martial.status
dta$martial.status[dta$martial.status %in% c("Married-AF-spouse", "Married-civ-spouse")] <-
"Married"
dta$martial.status[dta$martial.status %in% c("Divorced", "Married-spouse-absent", "Separated", "Widowed")] <-
"post-marriage"
#Race
dta$race[dta$race %in% c("Amer-Indian-Eskimo", "Asian-Pac-Islander")] <-
"Other"
#Too many categories in occupation and no apparent good way of recoding, leave it as it is
ff_glimpse(dta)
dta %>% select(workingclass, occupation, native.country) %>% missing_pattern()
dta %>% missing_compare("workingclass",
c("age", "education.num", "profit"))
dta$workingclass[is.na(dta$workingclass) == TRUE] <- "missing"
dta$occupation[is.na(dta$occupation) == TRUE] <- "missing"
#recode character to factor
for (i in names(dta)) {
if (class(dta[[i]]) == "character") {
dta[[i]] <- dta[[i]] %>% as.factor()
}
}
#construct summary statistics by education, profit, martial status etc. to set up ggplot data infrastructure
education.plot <- ggplot(
data = dta %>% group_by(education.group, income) %>% summarise(percent =
n() * 100 / nrow(dta)) %>% mutate(group = str_c(education.group, " and income", income)),
aes(x = education.group,
y = percent,
fill = income)
)
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = TRUE,
eval = TRUE,
message = FALSE,
warning = FALSE,
fig.height = 6,
fig.width = 16,
fig.align = "center"
)
cfps<-readstata13::read.dta13("data/ecfps2016famecon_201807.dta")%>%filter(urban16==1)
options(qwraps2_markup = "markdown")
summary_table(cfps)
str(cfps)
summary(cfps)
cfps$dress
cfps$dress%>%summary()
source('~/.active-rstudio-document', echo=TRUE)
cfps<-readstata13::read.dta13("data\family_merged_tidy.dta")%>%filter(urban16==1)
readstata13::read.dta13("data\family_merged_tidy.dta")
cfps<-haven::read_dta("data\family_merged_tidy.dta")%>%filter(urban16==1)
haven::read_dta("data\family_merged_tidy.dta")
haven::read_dta("data\family_merged_tidy.dta")
haven::read_dta("data\family_merged_tidy.dta")
fd
dd
d
haven::read_dta("data\family_merged_tidy.dta")
?read_dta
cfps<-haven::read_dta(file = "data\family_merged_tidy.dta")
cfps<-haven::read_dta(file = "data/family_merged_tidy.dta")
str(cfps)
cfps$urban16
cfps$urban16%>%table()
cfps$urban16%
cfps$urban16
ff_glimpse(dta)
ff_glimpse(cfps)
cfps<-haven::read_dta(file = "data/family_merged_tidy.dta")
ff_glimpse(cfps)
# Load packages.
packages <- c("tidyverse",
"knitr",
"finalfit",
"ggplot2",
"gridExtra"
)
packages <- lapply(packages, FUN = function(x) {
if(!require(x, character.only = TRUE)) {
install.packages(x)
library(x, character.only = TRUE)
}
}
)
a<-ff_glimpse(cfps)
View(a)
View(cfps)
class(cfps)
?ff_glimpse
ff_glimpse(cfps,dependent = allvalue)
ff_glimpse(cfps,dependent = "allvalue")
ff_glimpse(cfps)
?read_dta
names(cfps)
library(colourpicker)
detach("package:colourpicker", unload = TRUE)
